{"version":3,"sources":["serviceWorker.js","components/BackgroundContainer/BackgroundContainer.js","components/CheckedInStatus/CheckedInStatus.js","components/Header/Header.js","components/ContainerPanel/ContainerPanel.js","components/TabbedContent/TabbedContent.js","components/StudyBox/StudyBox.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","pages/Home/Home.js","pages/Login/Login.js","pages/Logout/Logout.js","pages/Account/Account.js","pages/AddFriends/AddFriends.js","pages/SetupAccount/SetupAccount.js","pages/CheckIn/CheckIn.js","pages/Profile/Profile.js","pages/Friends/Friends.js","index.js"],"names":["Boolean","window","location","hostname","match","BackgroundContainer","props","className","children","CheckedInStatus","class","user","checkedin","active","subject","onClick","handleCheckOut","to","Header","title","action","ContainerPanel","TabBar","TabItem","TabbedContent","useState","activeTab","setActiveTab","tabs","map","tabName","i","key","tabContents","StudyBox","introMessage","contacts","length","toString","noun","contact","src","photoURL","displayName","FirebaseContext","React","createContext","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doSignInWithGoogle","auth","signInWithRedirect","googleProvider","doSignOut","signOut","doSetupUser","username","Promise","resolve","reject","gUser","currentUser","db","collection","doc","set","uid","message","friends","then","catch","app","initializeApp","this","firestore","GoogleAuthProvider","username1","username2","update","FieldValue","arrayUnion","HomeInner","redirectToLogin","setRedirectToLogin","setUser","friendsByLocation","setFriendsByLocation","useEffect","firebase","onAuthStateChanged","_user","where","get","querySnapshot","userData","docs","data","id","friendsNames","friendsList","forEach","indexOf","push","filter","friend","friendsByLocationTemp","undefined","e","alert","redirectHome","reload","Object","keys","Home","Consumer","LoginNested","mode","setMode","console","log","Login","LogoutNested","doneSigningOut","setDoneSigningOut","Logout","AccountInner","Account","AddFriends","type","SetupAccount","setUsername","completed","setCompleted","value","onChange","target","courses","CheckInInner","_setUser","newUser","setBuilding","setSubject","setMessage","building","setRedirectHome","course","CheckIn","Profile","Friends","state","people","term","searchHandler","bind","setState","event","placeholder","x","toLowerCase","includes","searchingFor","person","img","name","alreadyFriended","handleAddFriend","doMakeFriends","Component","Person","FriendsWrapper","ReactDOM","render","Provider","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.694a9ed9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './BackgroundContainer.scss';\r\n\r\nconst BackgroundContainer = (props) => (\r\n    <div className=\"BackgroundContainer\">\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nexport default BackgroundContainer;","import React from 'react';\r\nimport './CheckedInStatus.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * prop.user  the user that is logged in\r\n */\r\nconst CheckedInStatus = (props) => (\r\n    <div class=\"CheckedInStatus\">\r\n        {\r\n            props.user.checkedin.active ? <>\r\n                You're checked in as studying {props.user.checkedin.subject} at {props.user.checkedin.location}\r\n        \r\n                <div class=\"ActionRow\">\r\n                    <a class=\"btn btn-primary\" onClick={props.handleCheckOut}>Check Out</a>\r\n                    <Link to=\"/checkin\"><div class=\"btn btn-text\">Edit Status</div></Link>\r\n                </div>\r\n            </> :\r\n            <>\r\n                Check in to let your friends know you are studying.\r\n                \r\n                <div class=\"ActionRow\">\r\n                    <Link to=\"/checkin\"><div class=\"btn btn-primary\">Check In</div></Link>\r\n                </div>\r\n            </>\r\n        }\r\n        \r\n    </div>\r\n);\r\n\r\nexport default CheckedInStatus;","import React from 'react';\r\nimport './Header.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => (\r\n    <div className=\"Header\">\r\n        <div className=\"left\">\r\n            <h1>{props.title || 'Slap dem Books'}</h1>\r\n        </div>\r\n        <div className=\"right\">\r\n            {\r\n                props.action === 'close' ?\r\n                <Link to=\"/\"><i class=\"fas fa-times\"></i></Link> :\r\n                <Link to=\"/account\"><i class=\"fas fa-ellipsis-v\"></i></Link>\r\n            }\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport './ContainerPanel.scss';\r\n\r\nconst ContainerPanel = (props) => (\r\n    <div className=\"ContainerPanel\">\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nexport default ContainerPanel;","import React, { useState } from 'react';\r\nimport './TabbedContent.scss';\r\n\r\nconst TabBar = (props) => (\r\n    <div className=\"TabBar\">\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nconst TabItem = (props) => (\r\n    <div class={'TabItem' + (props.active ? ' active' : '')} onClick={props.onClick}>\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\n/**\r\n * A list of tabbed content\r\n * props.tabs  list of tabs names\r\n * props.tabContents  list of content to display if given tab is active (e.g. if first\r\n *                    tab is selected, first item from tabContents list is displayed)\r\n */\r\nconst TabbedContent = (props) => {\r\n    // Set the first tab as the active tab, and track which tab is selected\r\n    const [activeTab, setActiveTab] = useState(0);\r\n\r\n    return (\r\n        <div className=\"TabbedContent\">\r\n            <TabBar>\r\n                {\r\n                    props.tabs.map((tabName, i) => <TabItem key={i} active={i == activeTab} onClick={() => {setActiveTab(i)}}>{tabName}</TabItem>)\r\n                }\r\n            </TabBar>\r\n\r\n            {props.tabContents[activeTab]}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TabbedContent;","import React from 'react';\r\nimport './StudyBox.scss';\r\n\r\n/**\r\n * List a group of contact studying at a location\r\n * props.contacts  list of contacts at the location\r\n * props.location  name of the location\r\n */\r\nconst StudyBox = (props) => {\r\n    let introMessage = props.contacts.length.toString() + ' ' + props.noun[props.contacts.length === 1 ? 0 : 1] + ' studying at ' + props.location;\r\n\r\n    return (\r\n        <div className=\"StudyBox\">\r\n            <div class=\"intro-label\">{introMessage}</div>\r\n            <div class=\"ContactList\">\r\n                {\r\n                    props.contacts.map((contact, i) => (\r\n                        <div class=\"Contact\" key={i}>\r\n                            <img class=\"pic\" src={contact.photoURL}/>\r\n                            {contact.displayName} is studying {contact.checkedin.subject}\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudyBox;","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDnDWpmq5hezmNEbrLmD--wytNx_NE-Abk\",\r\n    authDomain: \"slapdembooks.firebaseapp.com\",\r\n    databaseURL: \"https://slapdembooks.firebaseio.com\",\r\n    projectId: \"slapdembooks\",\r\n    storageBucket: \"slapdembooks.appspot.com\",\r\n    messagingSenderId: \"526030900055\",\r\n    appId: \"1:526030900055:web:614ec25daf06ea7b31cc12\",\r\n    measurementId: \"G-M9DLQVS5FT\"\r\n  };\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        app.initializeApp(firebaseConfig);\r\n        this.auth = app.auth();\r\n        this.db = app.firestore();\r\n        this.googleProvider = new app.auth.GoogleAuthProvider();\r\n    }\r\n\r\n    doSignInWithGoogle = () => this.auth.signInWithRedirect(this.googleProvider);\r\n\r\n    doSignOut = () => this.auth.signOut();\r\n\r\n    doSetupUser = (username) => new Promise((resolve, reject) => {\r\n        // Get current data from google user\r\n        let gUser = this.auth.currentUser;\r\n\r\n        this.db.collection('users').doc(username).set({\r\n            uid: gUser.uid,\r\n            displayName: gUser.displayName,\r\n            photoURL: gUser.photoURL,\r\n            checkedin: {\r\n                active: false,\r\n                location: '',\r\n                subject: '',\r\n                message: ''\r\n            },\r\n            friends: []\r\n        }).then(() => resolve()).catch(() => reject());\r\n    });\r\n\r\n    /* Take two usernames and makes both those users friends with eachother */\r\n    doMakeFriends(username1, username2) {\r\n        this.db.collection('users').doc(username1).update({friends: app.firestore.FieldValue.arrayUnion(username2)});\r\n        this.db.collection('users').doc(username2).update({friends: app.firestore.FieldValue.arrayUnion(username1)});\r\n    }\r\n\r\n    /*getCurrentUser = () => {\r\n        if (this.auth.currentUser !== null) {\r\n            this.cachedCurrentUser = this.auth.currentUser;\r\n        }\r\n    };\r\n\r\n    getCurrentUserDoc = () => new Promise((resolve, reject) => {\r\n        this.db.collection('users').where('uid', '==', this.getCurrentUser().uid).get().then((querySnapshot) => {\r\n            resolve(querySnapshot.docs[0]);\r\n        })\r\n    });*/\r\n}\r\n\r\nexport default Firebase;","import FirebaseContext from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext };","import React, { useState, useEffect } from 'react';\r\nimport './Home.scss';\r\nimport BackgroundContainer from '../../components/BackgroundContainer/BackgroundContainer';\r\nimport CheckedInStatus from '../../components/CheckedInStatus/CheckedInStatus';\r\nimport Header from '../../components/Header/Header.js';\r\nimport ContainerPanel from '../../components/ContainerPanel/ContainerPanel.js';\r\nimport TabbedContent from '../../components/TabbedContent/TabbedContent.js';\r\nimport StudyBox from '../../components/StudyBox/StudyBox.js';\r\nimport { FirebaseContext } from '../../components/Firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst HomeInner = (props) => {\r\n    const [redirectToLogin, setRedirectToLogin] = useState(false);\r\n    const [user, setUser] = useState(null);\r\n    const [friendsByLocation, setFriendsByLocation] = useState({});\r\n    useEffect(() => {\r\n        // Track if user is logged in or not\r\n        props.firebase.auth.onAuthStateChanged((_user) => {\r\n\t\t\tif (_user !== null) {\r\n                props.firebase.db.collection('users').where('uid', '==', _user.uid).get().then((querySnapshot) => {\r\n                    let userData = querySnapshot.docs[0].data();\r\n                    setUser({username: querySnapshot.docs[0].id, ...userData});\r\n                    let friendsNames = userData.friends;\r\n                    \r\n                    props.firebase.db.collection('users').get().then((querySnapshot) => {\r\n                        let friendsList = [];\r\n                        querySnapshot.forEach((doc) => {\r\n                            if (friendsNames.indexOf(doc.id) !== -1) {\r\n                                friendsList.push({\r\n                                    username: doc.id,\r\n                                    ...doc.data()\r\n                                    // ...doc.data() same as saying:\r\n                                    //photoURL: doc.data().photoURL,\r\n                                    //displayName: doc.data().displayName\r\n                                })\r\n                            }\r\n                        });\r\n                        friendsList = friendsList.filter(friend => friend.checkedin.active);\r\n                        let friendsByLocationTemp = {}\r\n                        friendsList.forEach(friend => {\r\n                            if (friendsByLocationTemp[friend.checkedin.location] === undefined) {\r\n                                friendsByLocationTemp[friend.checkedin.location] = [friend];\r\n                            } else {\r\n                                friendsByLocationTemp[friend.checkedin.location].push(friend);\r\n                            }\r\n                        });\r\n                        setFriendsByLocation(friendsByLocationTemp);\r\n                    });\r\n                }).catch(e => alert(\"Error \" + e))\r\n\t\t\t} else {\r\n                setUser(_user);\r\n                setRedirectToLogin(true);\r\n\t\t\t}\r\n\t\t});\r\n    }, []);\r\n\r\n    // Track if page needs to be refreshed\r\n    const [redirectHome, setRedirectHome] = useState(false);\r\n\r\n    // Check the user out of their current studying event\r\n    const handleCheckOut = () => {\r\n        // Find current user and mark them as not active\r\n        props.firebase.db.collection(\"users\").doc(user.username).update({checkedin: {\r\n            active: false,\r\n            location: '',\r\n            subject: '',\r\n            message: ''\r\n        }}).then(() => window.location.reload());\r\n    }\r\n\r\n    if (redirectHome) {\r\n        return <Redirect to='/'/>;\r\n    }\r\n\r\n    if (redirectToLogin) {\r\n        return <Redirect to='/login'/>;\r\n    }\r\n\r\n    if (!user) {\r\n        return <></>\r\n    }\r\n\r\n    return (<div className=\"Page Home\">\r\n        <BackgroundContainer>\r\n            <Header/>\r\n            <CheckedInStatus user={user} handleCheckOut={handleCheckOut}/>\r\n            <ContainerPanel>\r\n                <TabbedContent  tabs={['Friends', 'Courses']}\r\n                                tabContents={[\r\n                                   <div>\r\n                                        {\r\n                                            Object.keys(friendsByLocation).map(\r\n                                               (location, i) =>\r\n                                               <StudyBox key={i} location={location} contacts={friendsByLocation[location]} noun={['friend is', 'friends are']}/>\r\n                                            )\r\n                                        }\r\n                                    </div>,\r\n                                    <div>\r\n                                        Find other people studying the same course as you\r\n\r\n                                        {\r\n                                            Object.keys(friendsByLocation).map(\r\n                                                (location, i) =>\r\n                                                <StudyBox key={i} location={location} contacts={friendsByLocation[location]} noun={['person is', 'friends are']}/>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                ]}/>\r\n            </ContainerPanel>\r\n        </BackgroundContainer>\r\n    </div>);\r\n};\r\n\r\nconst Home = (props) => (\r\n    <FirebaseContext.Consumer>\r\n        { firebase => <HomeInner firebase={firebase}/> }\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport './Login.scss';\r\nimport BackgroundContainer from '../../components/BackgroundContainer/BackgroundContainer.js';\r\nimport { FirebaseContext } from '../../components/Firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst LoginNested = (props) => {\r\n    // Login screen can either be loading, redirecting or login\r\n    const [mode, setMode] = useState('loading');\r\n    useEffect(() => {\r\n        props.firebase.auth.onAuthStateChanged(function(user) {\r\n            if (user) {\r\n                props.firebase.db.collection('users').where('uid', '==', user.uid).get().then((querySnapshot) => {\r\n                    console.log(querySnapshot)\r\n                    if (querySnapshot.docs.length > 0) {\r\n                        // User has already logged in with google, don't need to go through setup process\r\n                        setMode('redirect to home');\r\n                    } else {\r\n                        // User hasn't logged in with google before, go through setup process\r\n                        setMode('redirect to setup');\r\n                    }\r\n                }).catch(e => alert(\"Error \" + e))\r\n            } else {\r\n                setMode('login')\r\n            }\r\n        });\r\n    }, []);\r\n    if (mode === 'redirect to setup') {\r\n        return <Redirect to='/setup'></Redirect>\r\n    }\r\n    if (mode === 'redirect to home') {\r\n        return <Redirect to='/'></Redirect>\r\n    }\r\n      \r\n\r\n    return (\r\n        <div className=\"Page Login\">\r\n            <BackgroundContainer>\r\n                <div class=\"aligner\">\r\n                    <div className=\"logoPlaceholder\"></div>\r\n                    {\r\n                        mode === 'login' &&\r\n                        <div className=\"btn-login googleLogin\" onClick={props.firebase.doSignInWithGoogle}>\r\n                            Login with Google\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </BackgroundContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Login = (props) => (\r\n    <FirebaseContext.Consumer>\r\n        {\r\n            firebase => <LoginNested firebase={firebase}></LoginNested>\r\n        }\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default Login;","import React, { useEffect, useState } from 'react';\r\nimport './Logout.scss';\r\nimport BackgroundContainer from '../../components/BackgroundContainer/BackgroundContainer.js';\r\nimport { FirebaseContext } from '../../components/Firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst LogoutNested = (props) => {\r\n    // Login screen can either be loading or redirecting\r\n    const [doneSigningOut, setDoneSigningOut] = useState(false);\r\n    useEffect(() => {\r\n        console.log(props.firebase)\r\n        props.firebase.doSignOut().then(() => setDoneSigningOut(true))\r\n    }, []);\r\n    if (doneSigningOut) {\r\n        return <Redirect to='/login'></Redirect>\r\n    }\r\n      \r\n\r\n    return (\r\n        <div className=\"Page Logout\">\r\n            <BackgroundContainer>\r\n            </BackgroundContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Logout = (props) => (\r\n    <FirebaseContext.Consumer>\r\n        {\r\n            firebase => <LogoutNested firebase={firebase}></LogoutNested>\r\n        }\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default Logout;","import React, { useState, useEffect } from 'react';\r\nimport './Account.scss';\r\nimport BackgroundContainer from '../../components/BackgroundContainer/BackgroundContainer';\r\nimport Header from '../../components/Header/Header.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { FirebaseContext } from '../../components/Firebase';\r\n\r\nconst AccountInner = (props) => {\r\n    const [user, setUser] = useState(null);\r\n    useEffect(() => {\r\n        // Track if user is logged in or not\r\n        props.firebase.auth.onAuthStateChanged((_user) => {\r\n\t\t\tif (_user) {\r\n                props.firebase.db.collection('users').where('uid', '==', _user.uid).get().then((querySnapshot) => {\r\n                    setUser({username: querySnapshot.docs[0].id, ...querySnapshot.docs[0].data()});\r\n                }).catch(e => alert(\"Error \" + e))\r\n\t\t\t} else {\r\n\t\t\t\tsetUser(_user);\r\n\t\t\t}\r\n\t\t});\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"Page Account\">\r\n            <BackgroundContainer>\r\n                <Header action=\"close\"/>\r\n                    {\r\n                        user && <>\r\n                            <img src={user.photoURL} className=\"pic\"/>\r\n                            <div className=\"accountName\">{user.username}</div>\r\n\r\n                            <div className=\"options\">\r\n                                <Link to='/friends'>\r\n                                    <i class=\"fas fa-user-plus\"></i>&nbsp;\r\n                                    Add Friends\r\n                                </Link>\r\n                                <Link to='/profile'>\r\n                                    <i class=\"fas fa-user-circle\"></i>&nbsp;\r\n                                    View Profile\r\n                                </Link>\r\n                                <Link to='/logout'>\r\n                                    <i class=\"fas fa-sign-out-alt\"></i>&nbsp;\r\n                                    Logout\r\n                                </Link>\r\n                            </div>\r\n                        </>\r\n                    }\r\n            </BackgroundContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Account = (props) => (\r\n    <FirebaseContext.Consumer>\r\n        { firebase => <AccountInner firebase={firebase}/> }\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default Account;","import React from 'react';\r\nimport './AddFriends.scss';\r\nimport BackgroundContainer from '../../components/BackgroundContainer/BackgroundContainer';\r\nimport Header from '../../components/Header/Header.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddFriends = (props) => (\r\n    <div className=\"Page AddFriends\">\r\n        <Header action=\"close\"/>\r\n\r\n        <div className=\"add-form\">\r\n            Friend's username\r\n            <input type=\"text\"></input>\r\n            <button>Add friend</button>\r\n        </div>\r\n\r\n        <div className=\"FriendList\">\r\n            Your Friend's\r\n            <ul>\r\n                <li>Person #1</li>\r\n                <li>Person #2</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default AddFriends;","import React, { useState } from 'react';\r\nimport './SetupAccount.scss';\r\nimport BackgroundContainer from '../../components/BackgroundContainer/BackgroundContainer';\r\nimport { FirebaseContext } from '../../components/Firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst SetupAccount = (props) => {\r\n    // Track the value the user has currently typed in the username field\r\n    const [username, setUsername] = useState('');\r\n\r\n    // Track if the user has completed setup and is ready to be redirected to the homepage\r\n    const [completed, setCompleted] = useState(false)\r\n    if (completed) {\r\n        return <Redirect to='/'/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"Page SetupAccount\">\r\n            <BackgroundContainer>\r\n                <div className=\"welcome-message\">\r\n                    Welcome to SlapDemBooks!\r\n                </div>\r\n\r\n                <div className=\"input-form\">\r\n                    Select a username:\r\n                    <input type=\"text\" className=\"username\" value={username} onChange={e => setUsername(e.target.value)}></input>\r\n                </div>\r\n\r\n                <footer>\r\n                    <FirebaseContext.Consumer>\r\n                        {\r\n                            firebase => <button className=\"confirm-btn\" onClick={() => firebase.doSetupUser(username).then(() => setCompleted(true))}>Confirm &raquo;</button>\r\n                        }\r\n                    </FirebaseContext.Consumer>\r\n                </footer>\r\n            </BackgroundContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SetupAccount;","import React, { useState, useEffect } from 'react';\r\nimport './CheckIn.scss';\r\nimport Header from '../../components/Header/Header.js';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { FirebaseContext } from '../../components/Firebase';\r\n\r\nconst courses = ['MATH223', 'MATH240', 'PHIL210', 'COMP550', 'COMP551'];\r\n\r\nconst CheckInInner = (props) => {\r\n    const [user, _setUser] = useState(null);\r\n    const setUser = (newUser) => {\r\n        _setUser(newUser);\r\n        if (newUser !== null) {\r\n            setBuilding(newUser.checkedin.location);\r\n            setSubject(newUser.checkedin.subject);\r\n            setMessage(newUser.checkedin.message);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        // Track if user is logged in or not\r\n        props.firebase.auth.onAuthStateChanged((_user) => {\r\n\t\t\tif (_user) {\r\n                props.firebase.db.collection('users').where('uid', '==', _user.uid).get().then((querySnapshot) => {\r\n                    setUser({username: querySnapshot.docs[0].id, ...querySnapshot.docs[0].data()});\r\n                }).catch(e => alert(\"Error \" + e))\r\n\t\t\t} else {\r\n\t\t\t\tsetUser(_user);\r\n\t\t\t}\r\n\t\t});\r\n    }, []);\r\n\r\n    // Track fields user has entered in form\r\n    const [building, setBuilding] = useState('');\r\n    const [subject, setSubject] = useState(courses[0]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    // Track if the user should be redirect back to home page\r\n    const [redirectHome, setRedirectHome] = useState(false);\r\n\r\n    // Cause the user to sign in and then redirect them to main page\r\n    const handleCheckIn = () => {\r\n        // Build doc ref from doc.id\r\n        props.firebase.db.collection(\"users\").doc(user.username).update({checkedin: {\r\n            active: true,\r\n            location: building,\r\n            subject,\r\n            message\r\n        }}).then(() => setRedirectHome(true));\r\n    };\r\n\r\n    if (redirectHome) {\r\n        return <Redirect to='/'/>\r\n    }\r\n\r\n    if (!user) {\r\n        return <></>\r\n    }\r\n\r\n    return <div className=\"Page CheckIn\">\r\n        <Header action=\"close\" title=\"Check In\"/>\r\n\r\n        <div className=\"field\">\r\n            What building are you studying in?\r\n            <input type=\"text\" value={building} onChange={e => setBuilding(e.target.value)}></input>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n            What subject are you studying?\r\n            <select value={subject} onChange={e => setSubject(e.target.value)}>\r\n                {courses.map((course, i) => <option key={i}>{course}</option>)}\r\n            </select>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n            Public message? (optional)\r\n            <textarea value={message} onChange={e => setMessage(e.target.value)}></textarea>\r\n        </div>\r\n\r\n        <a className=\"btn btn-primary\" onClick={handleCheckIn}>Check In</a>\r\n    </div>;\r\n}\r\n\r\nconst CheckIn = () => <FirebaseContext.Consumer>{firebase => <CheckInInner firebase={firebase}/>}</FirebaseContext.Consumer>;\r\n\r\nexport default CheckIn;","import React, { useState, useEffect } from 'react';\r\nimport './Profile.scss';\r\nimport BackgroundContainer from '../../components/BackgroundContainer/BackgroundContainer';\r\nimport Header from '../../components/Header/Header.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { FirebaseContext } from '../../components/Firebase';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"Page Profile\">\r\n            <Header action=\"close\"/>\r\n                {\r\n                <>\r\n                    <div className=\"center\">\r\n                        <img src=\"https://lh3.googleusercontent.com/-bxij4YMT3XY/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdUVPzzXHLpEwHq5RjzTY5Ayid6xA/photo.jpg\" className=\"pic\"/>\r\n                    </div>\r\n                    <div className=\"accountName\">Logan Ralston</div>\r\n                    <div className=\"accountUsername\">logan-r</div>\r\n                    \r\n                    <div className=\"defaultFontSize\">\r\n                        <div className=\"currentCourses\">\r\n                            <div className=\"infoTitle\">\r\n                                <i className=\"icon fas fa-clipboard-list\"></i>\r\n                                Logan Ralston is currently taking <span className=\"edit\">edit</span>\r\n                            </div>\r\n                            <ul className=\"courseList\">\r\n                                <li>MATH223</li>\r\n                                <li>PSYC305</li>\r\n                                <li>COMP302</li>\r\n                                <li>COMP303</li>\r\n                            </ul>\r\n                            </div>\r\n\r\n                            <hr></hr>\r\n\r\n                            <div className=\"checkInInfo\">\r\n                                <div className=\"infoTitle\">\r\n                                    Status: Checked In\r\n                                    <span className=\"edit\">edit</span>\r\n                                </div>\r\n                                <div className=\"infoTitle\">\r\n                                    <i className=\"icon fas fa-map-marker-alt\"></i> \r\n                                    Studying in Bronfman\r\n                                </div>\r\n                                <div className=\"infoTitle\">\r\n                                    <i className=\"icon fas fa-book\"></i> \r\n                                    Focusing on <span className=\"courseFocus\"> MATH223</span>\r\n                                    \r\n                                </div>\r\n                                <p className=\"description\">I'm working on Assignment 2 right now. Come join me!</p>\r\n                            </div>\r\n                        \r\n                    </div>\r\n                </>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useState, useEffect } from 'react';\r\nimport './Friends.scss';\r\nimport BackgroundContainer from '../../components/BackgroundContainer/BackgroundContainer';\r\nimport Header from '../../components/Header/Header.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { FirebaseContext } from '../../components/Firebase';\r\n\r\n\r\n//higher order function that\r\n//since this is outside, it doesn't have function to the state, so we must pass state in\r\nfunction searchingFor(term){\r\n    return function(x){//make sure when filtering, what we want meets the condition we're setting in here\r\n    console.log(x)\r\n        return x.username.toLowerCase().includes(term.toLowerCase()) ||\r\n            x.displayName.toLowerCase().includes(term.toLowerCase()) ||\r\n            !term;//include !term to account for when nothing is passed in, we do nothing\r\n\r\n\r\n    }\r\n}\r\n\r\nfunction FriendsWrapper(props) {\r\n    return (\r\n        <FirebaseContext.Consumer>\r\n            {firebase => <Friends firebase={firebase}></Friends>}\r\n        </FirebaseContext.Consumer>\r\n    )\r\n}\r\n\r\nclass Friends extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        //state refers to the state of the search\r\n        //term refers to what is input in the search bar\r\n        this.state = {\r\n            people: [],\r\n            term: '',\r\n            user: null,\r\n            friends: []\r\n        }\r\n        this.searchHandler = this.searchHandler.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        // Get the logged in user\r\n        this.props.firebase.auth.onAuthStateChanged((_user) => {\r\n\t\t\tif (_user) {\r\n               this.props.firebase.db.collection('users').where('uid', '==', _user.uid).get().then((querySnapshot) => {\r\n                    let userData = querySnapshot.docs[0].data()\r\n                    this.setState({user: {username: querySnapshot.docs[0].id, ...userData}, friends: userData.friends})\r\n                    querySnapshot.docs[0].data()\r\n                    // Load a list of this active user's possible friends\r\n                    this.props.firebase.db.collection('users').get().then((querySnapshot) => {\r\n                        let friendsList = [];\r\n                        querySnapshot.forEach((doc) => {\r\n                            if (doc.id !== this.state.user.username) {\r\n                                friendsList.push({\r\n                                    username: doc.id,\r\n                                    ...doc.data()\r\n                                    // ...doc.data() same as saying:\r\n                                    //photoURL: doc.data().photoURL,\r\n                                    //displayName: doc.data().displayName\r\n                                })\r\n                            }\r\n                        });\r\n                        console.log(userData.friends)\r\n                        this.setState({people: friendsList});\r\n                    });\r\n                }).catch(e => alert(\"Error \" + e))\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({user: null})\r\n\t\t\t}\r\n\t\t});\r\n    }\r\n\r\n    searchHandler(event){\r\n        this.setState({term: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        //makes it so we can use \"term\" instead of \"this.state.term\" and \"friends\" instead of \"this.state.friends\"\r\n        const{term, people} = this.state;\r\n        return (\r\n            <div className=\"Page Friends\">\r\n                <Header title=\"Add Friends\" action=\"close\"/>\r\n                <div class=\"searchbar\">\r\n                    <form>\r\n                        <i class=\"fas fa-search\" id=\"searchIcon\"></i>\r\n                        <input id=\"searchInput\" type=\"text\" placeholder=\"Search\" onChange={this.searchHandler} value={term}/>\r\n                    </form>\r\n                </div>\r\n                {\r\n                    //load list of friends onto the page from the array \"friends\"\r\n                    //map through the state\r\n                    people.filter(searchingFor(term)).map((person) =>\r\n                            <div key={person.username}>\r\n                                <Person img={person.photoURL}\r\n                                        name={person.displayName}\r\n                                        username={person.username}\r\n                                        alreadyFriended={this.state.friends.indexOf(person.username) !== -1}\r\n                                        handleAddFriend={() => {\r\n                                            this.props.firebase.doMakeFriends(this.state.user.username, person.username);\r\n                                            this.setState({friends: this.state.friends + [person.username]})\r\n                                        }}/>\r\n                            </div> \r\n                    )\r\n                    \r\n                }\r\n            \r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\n//each person is displayed as button so when you click on that person's button, it will go to their profile.\r\nclass Person extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"box\">\r\n                <img src={this.props.img} className=\"pic\"/>\r\n                <div className=\"person-info\">\r\n                    <div className = \"name\">{this.props.name}</div>\r\n                    <div className = \"username\">{this.props.username}</div>\r\n                </div>\r\n                {\r\n                    this.props.alreadyFriended ? \r\n                    <div class=\"add-friend-btn\">\r\n                        <i class=\"fas fa-check\"></i>\r\n                    </div> :\r\n                    <div class=\"add-friend-btn\" onClick={this.props.handleAddFriend}>\r\n                        <i class=\"fas fa-user-plus\"></i>\r\n                    </div>\r\n                }\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default FriendsWrapper;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './normalize.css'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport Home from './pages/Home/Home';\r\nimport Login from './pages/Login/Login';\r\nimport Logout from './pages/Logout/Logout';\r\nimport Account from './pages/Account/Account';\r\nimport Firebase, { FirebaseContext } from './components/Firebase';\r\nimport AddFriends from './pages/AddFriends/AddFriends';\r\nimport SetupAccount from './pages/SetupAccount/SetupAccount';\r\nimport CheckIn from './pages/CheckIn/CheckIn';\r\nimport Profile from './pages/Profile/Profile';\r\nimport Friends from './pages/Friends/Friends';\r\n\r\nReactDOM.render(\r\n    <FirebaseContext.Provider value={new Firebase()}>\r\n        <Router>\r\n            <Route exact path='/' component={Home} />\r\n            <Route exact path='/login' component={Login} />\r\n            <Route exact path='/logout' component={Logout} />\r\n            <Route exact path='/setup' component={SetupAccount} />\r\n            <Route exact path='/checkin' component={CheckIn} />\r\n            <Route exact path='/account' component={Account} />\r\n            <Route exact path='/addfriends' component={AddFriends} />\r\n            <Route exact path='/profile' component={Profile} />\r\n            <Route exact path='/friends' component={Friends} />\r\n        </Router>\r\n    </FirebaseContext.Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}