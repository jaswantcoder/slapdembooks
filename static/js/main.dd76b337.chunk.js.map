{"version":3,"sources":["serviceWorker.js","components/BackgroundContainer/BackgroundContainer.js","components/CheckedInStatus/CheckedInStatus.js","components/Header/Header.js","components/ContainerPanel/ContainerPanel.js","components/TabbedContent/TabbedContent.js","components/StudyBox/StudyBox.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","pages/Home/Home.js","pages/Login/Login.js","pages/Logout/Logout.js","pages/Account/Account.js","pages/AddFriends/AddFriends.js","pages/SetupAccount/SetupAccount.js","pages/CheckIn/CheckIn.js","pages/Profile/Profile.js","pages/Friends/Friends.js","index.js"],"names":["Boolean","window","location","hostname","match","BackgroundContainer","props","className","children","CheckedInStatus","class","user","checkedin","active","subject","onClick","handleCheckOut","to","Header","title","action","ContainerPanel","TabBar","TabItem","TabbedContent","useState","activeTab","setActiveTab","tabs","map","tabName","i","key","tabContents","StudyBox","introMessage","contacts","length","toString","noun","contact","src","name","course","FirebaseContext","React","createContext","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doSignInWithGoogle","auth","signInWithRedirect","googleProvider","doSignOut","signOut","app","initializeApp","this","db","firestore","GoogleAuthProvider","HomeInner","setUser","useEffect","firebase","onAuthStateChanged","_user","collection","where","uid","get","then","querySnapshot","username","docs","id","data","catch","e","alert","redirectHome","doc","update","message","reload","Home","Consumer","LoginNested","mode","setMode","Login","LogoutNested","doneSigningOut","setDoneSigningOut","console","log","Logout","AccountInner","photoURL","Account","AddFriends","type","SetupAccount","setUsername","completed","setCompleted","value","onChange","target","doSetupUser","courses","CheckInInner","_setUser","newUser","setBuilding","setSubject","setMessage","building","setRedirectHome","CheckIn","Profile","Person","image","Component","SearchBar","Friends","ReactDOM","render","Provider","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd76b337.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport './BackgroundContainer.scss';\r\n\r\nconst BackgroundContainer = (props) => (\r\n    <div className=\"BackgroundContainer\">\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nexport default BackgroundContainer;","import React from 'react';\r\nimport './CheckedInStatus.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * prop.user  the user that is logged in\r\n */\r\nconst CheckedInStatus = (props) => (\r\n    <div class=\"CheckedInStatus\">\r\n        {\r\n            props.user.checkedin.active ? <>\r\n                You're checked in as studying {props.user.checkedin.subject} at {props.user.checkedin.location}\r\n        \r\n                <div class=\"ActionRow\">\r\n                    <a class=\"btn btn-primary\" onClick={props.handleCheckOut}>Check Out</a>\r\n                    <Link to=\"/checkin\"><div class=\"btn btn-text\">Edit Status</div></Link>\r\n                </div>\r\n            </> :\r\n            <>\r\n                Check in to let your friends know you are studying.\r\n                \r\n                <div class=\"ActionRow\">\r\n                    <Link to=\"/checkin\"><div class=\"btn btn-primary\">Check In</div></Link>\r\n                </div>\r\n            </>\r\n        }\r\n        \r\n    </div>\r\n);\r\n\r\nexport default CheckedInStatus;","import React from 'react';\r\nimport './Header.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => (\r\n    <div className=\"Header\">\r\n        <div className=\"left\">\r\n            <h1>{props.title || 'Slap dem Books'}</h1>\r\n        </div>\r\n        <div className=\"right\">\r\n            {\r\n                props.action === 'close' ?\r\n                <Link to=\"/\"><i class=\"fas fa-times\"></i></Link> :\r\n                <Link to=\"/account\"><i class=\"fas fa-ellipsis-v\"></i></Link>\r\n            }\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport './ContainerPanel.scss';\r\n\r\nconst ContainerPanel = (props) => (\r\n    <div className=\"ContainerPanel\">\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nexport default ContainerPanel;","import React, { useState } from 'react';\r\nimport './TabbedContent.scss';\r\n\r\nconst TabBar = (props) => (\r\n    <div className=\"TabBar\">\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nconst TabItem = (props) => (\r\n    <div class={'TabItem' + (props.active ? ' active' : '')} onClick={props.onClick}>\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\n/**\r\n * A list of tabbed content\r\n * props.tabs  list of tabs names\r\n * props.tabContents  list of content to display if given tab is active (e.g. if first\r\n *                    tab is selected, first item from tabContents list is displayed)\r\n */\r\nconst TabbedContent = (props) => {\r\n    // Set the first tab as the active tab, and track which tab is selected\r\n    const [activeTab, setActiveTab] = useState(0);\r\n\r\n    return (\r\n        <div className=\"TabbedContent\">\r\n            <TabBar>\r\n                {\r\n                    props.tabs.map((tabName, i) => <TabItem key={i} active={i == activeTab} onClick={() => {setActiveTab(i)}}>{tabName}</TabItem>)\r\n                }\r\n            </TabBar>\r\n\r\n            {props.tabContents[activeTab]}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TabbedContent;","import React from 'react';\r\nimport './StudyBox.scss';\r\n\r\n/**\r\n * List a group of contact studying at a location\r\n * props.contacts  list of contacts at the location\r\n * props.location  name of the location\r\n */\r\nconst StudyBox = (props) => {\r\n    let introMessage = props.contacts.length.toString() + ' ' + props.noun[props.contacts.length === 1 ? 0 : 1] + ' studying at ' + props.location;\r\n\r\n    return (\r\n        <div className=\"StudyBox\">\r\n            <div class=\"intro-label\">{introMessage}</div>\r\n            <div class=\"ContactList\">\r\n                {\r\n                    props.contacts.map((contact, i) => (\r\n                        <div class=\"Contact\" key={i}>\r\n                            <img class=\"pic\" src={'https://i.pravatar.cc/' + (38 + i).toString()}/>\r\n                            {contact.name} is studying {contact.course}\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudyBox;","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDnDWpmq5hezmNEbrLmD--wytNx_NE-Abk\",\r\n    authDomain: \"slapdembooks.firebaseapp.com\",\r\n    databaseURL: \"https://slapdembooks.firebaseio.com\",\r\n    projectId: \"slapdembooks\",\r\n    storageBucket: \"slapdembooks.appspot.com\",\r\n    messagingSenderId: \"526030900055\",\r\n    appId: \"1:526030900055:web:614ec25daf06ea7b31cc12\",\r\n    measurementId: \"G-M9DLQVS5FT\"\r\n  };\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        app.initializeApp(firebaseConfig);\r\n        this.auth = app.auth();\r\n        this.db = app.firestore();\r\n        this.googleProvider = new app.auth.GoogleAuthProvider();\r\n    }\r\n\r\n    doSignInWithGoogle = () => this.auth.signInWithRedirect(this.googleProvider);\r\n\r\n    doSignOut = () => this.auth.signOut();\r\n\r\n    /*getCurrentUser = () => {\r\n        if (this.auth.currentUser !== null) {\r\n            this.cachedCurrentUser = this.auth.currentUser;\r\n        }\r\n    };\r\n\r\n    getCurrentUserDoc = () => new Promise((resolve, reject) => {\r\n        this.db.collection('users').where('uid', '==', this.getCurrentUser().uid).get().then((querySnapshot) => {\r\n            resolve(querySnapshot.docs[0]);\r\n        })\r\n    });*/\r\n}\r\n\r\nexport default Firebase;","import FirebaseContext from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext };","import React, { useState, useEffect } from 'react';\r\nimport './Home.scss';\r\nimport BackgroundContainer from '../../components/BackgroundContainer/BackgroundContainer';\r\nimport CheckedInStatus from '../../components/CheckedInStatus/CheckedInStatus';\r\nimport Header from '../../components/Header/Header.js';\r\nimport ContainerPanel from '../../components/ContainerPanel/ContainerPanel.js';\r\nimport TabbedContent from '../../components/TabbedContent/TabbedContent.js';\r\nimport StudyBox from '../../components/StudyBox/StudyBox.js';\r\nimport { FirebaseContext } from '../../components/Firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst HomeInner = (props) => {\r\n    const [user, setUser] = useState(null);\r\n    useEffect(() => {\r\n        // Track if user is logged in or not\r\n        props.firebase.auth.onAuthStateChanged((_user) => {\r\n\t\t\tif (_user) {\r\n                props.firebase.db.collection('users').where('uid', '==', _user.uid).get().then((querySnapshot) => {\r\n                    setUser({username: querySnapshot.docs[0].id, ...querySnapshot.docs[0].data()});\r\n                }).catch(e => alert(\"Error \" + e))\r\n\t\t\t} else {\r\n\t\t\t\tsetUser(_user);\r\n\t\t\t}\r\n\t\t});\r\n    }, []);\r\n\r\n    // Track if page needs to be refreshed\r\n    const [redirectHome, setRedirectHome] = useState(false);\r\n\r\n    // Check the user out of their current studying event\r\n    const handleCheckOut = () => {\r\n        // Find current user and mark them as not active\r\n        props.firebase.db.collection(\"users\").doc(user.username).update({checkedin: {\r\n            active: false,\r\n            location: '',\r\n            subject: '',\r\n            message: ''\r\n        }}).then(() => window.location.reload());\r\n    }\r\n\r\n    if (redirectHome) {\r\n        return <Redirect to='/'/>;\r\n    }\r\n\r\n    if (!user) {\r\n        return <></>\r\n    }\r\n\r\n    return (<div className=\"Page Home\">\r\n        <BackgroundContainer>\r\n            <Header/>\r\n            <CheckedInStatus user={user} handleCheckOut={handleCheckOut}/>\r\n            <ContainerPanel>\r\n                <TabbedContent tabs={['Friends', 'Courses']}\r\n                               tabContents={[\r\n                                   <div>\r\n                                       <StudyBox contacts={[{name: 'Kate', course: 'NSCI200'}, {name: 'Sasha', course: 'PHIL210'}]} location=\"McLennan\" noun={['friend is', 'friends are']}/>\r\n                                       <StudyBox contacts={[{name: 'Grace', course: 'MATH223'}]} location=\"Burnside\" noun={['friend is', 'friends are']}/>\r\n                                   </div>,\r\n                                   <div>\r\n                                       Find other people studying the same course as you\r\n\r\n                                       <StudyBox contacts={[{name: 'Kate', course: 'NSCI200'}, {name: 'Sasha', course: 'PHIL210'}]} location=\"McLennan\" noun={['person is', 'people are']}/>\r\n                                   </div>\r\n                               ]}/>\r\n            </ContainerPanel>\r\n        </BackgroundContainer>\r\n    </div>);\r\n};\r\n\r\nconst Home = (props) => (\r\n    <FirebaseContext.Consumer>\r\n        { firebase => <HomeInner firebase={firebase}/> }\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport './Login.scss';\r\nimport BackgroundContainer from '../../components/BackgroundContainer/BackgroundContainer.js';\r\nimport { FirebaseContext } from '../../components/Firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst LoginNested = (props) => {\r\n    // Login screen can either be loading, redirecting or login\r\n    const [mode, setMode] = useState('loading');\r\n    useEffect(() => {\r\n        props.firebase.auth.onAuthStateChanged(function(user) {\r\n            if (user) {\r\n                // User is signed in\r\n                setMode('redirecting')\r\n            } else {\r\n                setMode('login')\r\n            }\r\n        });\r\n    }, []);\r\n    if (mode === 'redirecting') {\r\n        return <Redirect to='/'></Redirect>\r\n    }\r\n      \r\n\r\n    return (\r\n        <div className=\"Page Login\">\r\n            <BackgroundContainer>\r\n                <div class=\"aligner\">\r\n                    <div className=\"logoPlaceholder\"></div>\r\n                    {\r\n                        mode === 'login' &&\r\n                        <div className=\"btn-login googleLogin\" onClick={props.firebase.doSignInWithGoogle}>\r\n                            Login with Google\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </BackgroundContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Login = (props) => (\r\n    <FirebaseContext.Consumer>\r\n        {\r\n            firebase => <LoginNested firebase={firebase}></LoginNested>\r\n        }\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default Login;","import React, { useEffect, useState } from 'react';\r\nimport './Logout.scss';\r\nimport BackgroundContainer from '../../components/BackgroundContainer/BackgroundContainer.js';\r\nimport { FirebaseContext } from '../../components/Firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst LogoutNested = (props) => {\r\n    // Login screen can either be loading or redirecting\r\n    const [doneSigningOut, setDoneSigningOut] = useState(false);\r\n    useEffect(() => {\r\n        console.log(props.firebase)\r\n        props.firebase.doSignOut().then(() => setDoneSigningOut(true))\r\n    }, []);\r\n    if (doneSigningOut) {\r\n        return <Redirect to='/login'></Redirect>\r\n    }\r\n      \r\n\r\n    return (\r\n        <div className=\"Page Logout\">\r\n            <BackgroundContainer>\r\n            </BackgroundContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Logout = (props) => (\r\n    <FirebaseContext.Consumer>\r\n        {\r\n            firebase => <LogoutNested firebase={firebase}></LogoutNested>\r\n        }\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default Logout;","import React, { useState, useEffect } from 'react';\r\nimport './Account.scss';\r\nimport BackgroundContainer from '../../components/BackgroundContainer/BackgroundContainer';\r\nimport Header from '../../components/Header/Header.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { FirebaseContext } from '../../components/Firebase';\r\n\r\nconst AccountInner = (props) => {\r\n    const [user, setUser] = useState(null);\r\n    useEffect(() => {\r\n        // Track if user is logged in or not\r\n        props.firebase.auth.onAuthStateChanged((_user) => {\r\n\t\t\tif (_user) {\r\n                props.firebase.db.collection('users').where('uid', '==', _user.uid).get().then((querySnapshot) => {\r\n                    setUser({username: querySnapshot.docs[0].id, ...querySnapshot.docs[0].data()});\r\n                }).catch(e => alert(\"Error \" + e))\r\n\t\t\t} else {\r\n\t\t\t\tsetUser(_user);\r\n\t\t\t}\r\n\t\t});\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"Page Account\">\r\n            <BackgroundContainer>\r\n                <Header action=\"close\"/>\r\n                    {\r\n                        user && <>\r\n                            <img src={user.photoURL} className=\"pic\"/>\r\n                            <div className=\"accountName\">{user.username}</div>\r\n\r\n                            <div className=\"options\">\r\n                                <Link to='/addfriends'>\r\n                                    <i class=\"fas fa-user-plus\"></i>&nbsp;\r\n                                    Add Friends\r\n                                </Link>\r\n                                <Link to='/profile'>\r\n                                    <i class=\"fas fa-user-circle\"></i>&nbsp;\r\n                                    View Profile\r\n                                </Link>\r\n                                <Link to='/logout'>\r\n                                    <i class=\"fas fa-sign-out-alt\"></i>&nbsp;\r\n                                    Logout\r\n                                </Link>\r\n                            </div>\r\n                        </>\r\n                    }\r\n            </BackgroundContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Account = (props) => (\r\n    <FirebaseContext.Consumer>\r\n        { firebase => <AccountInner firebase={firebase}/> }\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default Account;","import React from 'react';\r\nimport './AddFriends.scss';\r\nimport BackgroundContainer from '../../components/BackgroundContainer/BackgroundContainer';\r\nimport Header from '../../components/Header/Header.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddFriends = (props) => (\r\n    <div className=\"Page AddFriends\">\r\n        <Header action=\"close\"/>\r\n\r\n        <div className=\"add-form\">\r\n            Friend's username\r\n            <input type=\"text\"></input>\r\n            <button>Add friend</button>\r\n        </div>\r\n\r\n        <div className=\"FriendList\">\r\n            Your Friend's\r\n            <ul>\r\n                <li>Person #1</li>\r\n                <li>Person #2</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default AddFriends;","import React, { useState } from 'react';\r\nimport './SetupAccount.scss';\r\nimport BackgroundContainer from '../../components/BackgroundContainer/BackgroundContainer';\r\nimport { FirebaseContext } from '../../components/Firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst SetupAccount = (props) => {\r\n    // Track the value the user has currently typed in the username field\r\n    const [username, setUsername] = useState('');\r\n\r\n    // Track if the user has completed setup and is ready to be redirected to the homepage\r\n    const [completed, setCompleted] = useState(false)\r\n    if (completed) {\r\n        return <Redirect to='/'/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"Page SetupAccount\">\r\n            <BackgroundContainer>\r\n                <div className=\"welcome-message\">\r\n                    Welcome to SlapDemBooks!\r\n                </div>\r\n\r\n                <div className=\"input-form\">\r\n                    Select a username:\r\n                    <input type=\"text\" className=\"username\" value={username} onChange={e => setUsername(e.target.value)}></input>\r\n                </div>\r\n\r\n                <footer>\r\n                    <FirebaseContext.Consumer>\r\n                        {\r\n                            firebase => <button className=\"confirm-btn\" onClick={() => firebase.doSetupUser(username).then(() => setCompleted(true))}>Confirm &raquo;</button>\r\n                        }\r\n                    </FirebaseContext.Consumer>\r\n                </footer>\r\n            </BackgroundContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SetupAccount;","import React, { useState, useEffect } from 'react';\r\nimport './CheckIn.scss';\r\nimport Header from '../../components/Header/Header.js';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { FirebaseContext } from '../../components/Firebase';\r\n\r\nconst courses = ['MATH223', 'MATH240', 'PHIL210', 'COMP550', 'COMP551'];\r\n\r\nconst CheckInInner = (props) => {\r\n    const [user, _setUser] = useState(null);\r\n    const setUser = (newUser) => {\r\n        _setUser(newUser);\r\n        if (newUser !== null) {\r\n            setBuilding(newUser.checkedin.location);\r\n            setSubject(newUser.checkedin.subject);\r\n            setMessage(newUser.checkedin.message);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        // Track if user is logged in or not\r\n        props.firebase.auth.onAuthStateChanged((_user) => {\r\n\t\t\tif (_user) {\r\n                props.firebase.db.collection('users').where('uid', '==', _user.uid).get().then((querySnapshot) => {\r\n                    setUser({username: querySnapshot.docs[0].id, ...querySnapshot.docs[0].data()});\r\n                }).catch(e => alert(\"Error \" + e))\r\n\t\t\t} else {\r\n\t\t\t\tsetUser(_user);\r\n\t\t\t}\r\n\t\t});\r\n    }, []);\r\n\r\n    // Track fields user has entered in form\r\n    const [building, setBuilding] = useState('');\r\n    const [subject, setSubject] = useState(courses[0]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    // Track if the user should be redirect back to home page\r\n    const [redirectHome, setRedirectHome] = useState(false);\r\n\r\n    // Cause the user to sign in and then redirect them to main page\r\n    const handleCheckIn = () => {\r\n        // Build doc ref from doc.id\r\n        props.firebase.db.collection(\"users\").doc(user.username).update({checkedin: {\r\n            active: true,\r\n            location: building,\r\n            subject,\r\n            message\r\n        }}).then(() => setRedirectHome(true));\r\n    };\r\n\r\n    if (redirectHome) {\r\n        return <Redirect to='/'/>\r\n    }\r\n\r\n    if (!user) {\r\n        return <></>\r\n    }\r\n\r\n    return <div className=\"Page CheckIn\">\r\n        <Header action=\"close\" title=\"Check In\"/>\r\n\r\n        <div className=\"field\">\r\n            What building are you studying in?\r\n            <input type=\"text\" value={building} onChange={e => setBuilding(e.target.value)}></input>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n            What subject are you studying?\r\n            <select value={subject} onChange={e => setSubject(e.target.value)}>\r\n                {courses.map((course, i) => <option key={i}>{course}</option>)}\r\n            </select>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n            Public message? (optional)\r\n            <textarea value={message} onChange={e => setMessage(e.target.value)}></textarea>\r\n        </div>\r\n\r\n        <a className=\"btn btn-primary\" onClick={handleCheckIn}>Check In</a>\r\n    </div>;\r\n}\r\n\r\nconst CheckIn = () => <FirebaseContext.Consumer>{firebase => <CheckInInner firebase={firebase}/>}</FirebaseContext.Consumer>;\r\n\r\nexport default CheckIn;","import React, { useState, useEffect } from 'react';\r\nimport './Profile.scss';\r\nimport BackgroundContainer from '../../components/BackgroundContainer/BackgroundContainer';\r\nimport Header from '../../components/Header/Header.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { FirebaseContext } from '../../components/Firebase';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"Page Profile\">\r\n            <Header action=\"close\"/>\r\n                {\r\n                <>\r\n                    <div className=\"center\">\r\n                        <img src=\"https://lh3.googleusercontent.com/-bxij4YMT3XY/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdUVPzzXHLpEwHq5RjzTY5Ayid6xA/photo.jpg\" className=\"pic\"/>\r\n                    </div>\r\n                    <div className=\"accountName\">Logan Ralston</div>\r\n                    <div className=\"accountUsername\">logan-r</div>\r\n                    \r\n                    <div className=\"defaultFontSize\">\r\n                        <div className=\"currentCourses\">\r\n                            <div className=\"infoTitle\">\r\n                                <i className=\"icon fas fa-clipboard-list\"></i>\r\n                                Logan Ralston is currently taking <span className=\"edit\">edit</span>\r\n                            </div>\r\n                            <ul className=\"courseList\">\r\n                                <li>MATH223</li>\r\n                                <li>PSYC305</li>\r\n                                <li>COMP302</li>\r\n                                <li>COMP303</li>\r\n                            </ul>\r\n                            </div>\r\n\r\n                            <hr></hr>\r\n\r\n                            <div className=\"checkInInfo\">\r\n                                <div className=\"infoTitle\">\r\n                                    Status: Checked In\r\n                                    <span className=\"edit\">edit</span>\r\n                                </div>\r\n                                <div className=\"infoTitle\">\r\n                                    <i className=\"icon fas fa-map-marker-alt\"></i> \r\n                                    Studying in Bronfman\r\n                                </div>\r\n                                <div className=\"infoTitle\">\r\n                                    <i className=\"icon fas fa-book\"></i> \r\n                                    Focusing on <span className=\"courseFocus\"> MATH223</span>\r\n                                    \r\n                                </div>\r\n                                <p className=\"description\">I'm working on Assignment 2 right now. Come join me!</p>\r\n                            </div>\r\n                        \r\n                    </div>\r\n                </>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useState, useEffect } from 'react';\r\nimport './Friends.scss';\r\nimport BackgroundContainer from '../../components/BackgroundContainer/BackgroundContainer';\r\nimport Header from '../../components/Header/Header.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { FirebaseContext } from '../../components/Firebase';\r\n\r\nconst Friends = (props) => {\r\n    return (\r\n        <div className=\"Page Friends\">\r\n            <Header/>\r\n            <SearchBar/>\r\n            <h1 className=\"pageTitle\">Your Friends</h1>\r\n            <ul className=\"friendsList\">\r\n                <li><Person/></li>\r\n                <li><Person/></li>\r\n                <li><Person/></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass Person extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.image= \"https://lh3.googleusercontent.com/-bxij4YMT3XY/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdUVPzzXHLpEwHq5RjzTY5Ayid6xA/photo.jpg\";\r\n        this.name= \"Logan Ralston\";\r\n        this.username= \"logan-r\";\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"box\">\r\n                <img src={this.image} className=\"pic\"/>\r\n                <div className = \"name\">{this.name}</div>\r\n                <div className = \"username\">{this.username}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SearchBar extends React.Component{\r\n    render(){\r\n        return(\r\n            <div class=\"searchbar\">\r\n                <form>\r\n                    \r\n                    <i class=\"fas fa-search\" id=\"searchIcon\"></i>\r\n                    \r\n                    <input type=\"text\" value=\"Search\"/>\r\n                    \r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './normalize.css'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Home from './pages/Home/Home';\r\nimport Login from './pages/Login/Login';\r\nimport Logout from './pages/Logout/Logout';\r\nimport Account from './pages/Account/Account';\r\nimport Firebase, { FirebaseContext } from './components/Firebase';\r\nimport AddFriends from './pages/AddFriends/AddFriends';\r\nimport SetupAccount from './pages/SetupAccount/SetupAccount';\r\nimport CheckIn from './pages/CheckIn/CheckIn';\r\nimport Profile from './pages/Profile/Profile';\r\nimport Friends from './pages/Friends/Friends';\r\n\r\nReactDOM.render(\r\n    <FirebaseContext.Provider value={new Firebase()}>\r\n        <Router>\r\n            <Route exact path='/' component={Home} />\r\n            <Route exact path='/login' component={Login} />\r\n            <Route exact path='/logout' component={Logout} />\r\n            <Route exact path='/setup' component={SetupAccount} />\r\n            <Route exact path='/checkin' component={CheckIn} />\r\n            <Route exact path='/account' component={Account} />\r\n            <Route exact path='/addfriends' component={AddFriends} />\r\n            <Route exact path='/profile' component={Profile} />\r\n            <Route exact path='/friends' component={Friends} />\r\n        </Router>\r\n    </FirebaseContext.Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}